user  www-data;
worker_processes  2;

events {
    worker_connections  1024;
    use epoll;
}

http {
    upstream websocket {
        server 127.0.0.1:3000;
    }

    # Only retry if there was a communication error, not a timeout.
    proxy_next_upstream error;

    server_tokens off;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;

    server {
        listen 80 default_server;
        server_name _;

        return 301 https://$host$request_uri;

        location / {
            root   {{ project_root }};
        }
    }

    server {
        listen 443 default_server;
        server_name _;

        ssl on;
        ssl_certificate /etc/ssl/certs/star.{{ ssl_domain }}.chained.crt;
        ssl_certificate_key /etc/ssl/private/star.{{ ssl_domain }}.key;

        location / {
            root   {{ project_root }};
        }

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_redirect off;

        location /sockjs-node {
            proxy_pass http://websocket;
        }
    }

    include vhosts.d/*.conf;
}
